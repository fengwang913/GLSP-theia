import { TerminalContribution } from './terminal-contribution';
import { TerminalWidgetImpl } from './terminal-widget-impl';
import { OpenerService } from '@theia/core/lib/browser/opener-service';
export declare abstract class AbstractCmdClickTerminalContribution implements TerminalContribution {
    abstract getRegExp(terminalWidget: TerminalWidgetImpl): Promise<RegExp>;
    abstract getHandler(terminalWidget: TerminalWidgetImpl): (event: MouseEvent, text: string) => void;
    getValidate(terminalWidget: TerminalWidgetImpl): (text: string) => Promise<boolean>;
    onCreate(terminalWidget: TerminalWidgetImpl): Promise<void>;
    protected isCommandPressed(event: MouseEvent): boolean;
    protected wasTouchEvent(event: MouseEvent, lastTouchEnd: TouchEvent | undefined): boolean;
    protected getHoverMessage(): string;
}
export declare class URLMatcher extends AbstractCmdClickTerminalContribution {
    protected readonly openerService: OpenerService;
    getRegExp(): Promise<RegExp>;
    getHandler(): (event: MouseEvent, uri: string) => void;
}
export declare class LocalhostMatcher extends AbstractCmdClickTerminalContribution {
    protected readonly openerService: OpenerService;
    getRegExp(): Promise<RegExp>;
    getHandler(): (event: MouseEvent, uri: string) => void;
}
//# sourceMappingURL=terminal-linkmatcher.d.ts.map