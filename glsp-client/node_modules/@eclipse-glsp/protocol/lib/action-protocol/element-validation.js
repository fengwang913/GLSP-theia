"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeleteMarkersAction = exports.SetMarkersAction = exports.RequestMarkersAction = exports.MarkerKind = void 0;
/********************************************************************************
 * Copyright (c) 2021-2022 STMicroelectronics and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const type_util_1 = require("../utils/type-util");
const base_protocol_1 = require("./base-protocol");
/**
 * The default marker kinds used in GLSP
 */
var MarkerKind;
(function (MarkerKind) {
    MarkerKind.INFO = 'info';
    MarkerKind.WARNING = 'warning';
    MarkerKind.ERROR = 'error';
})(MarkerKind = exports.MarkerKind || (exports.MarkerKind = {}));
var RequestMarkersAction;
(function (RequestMarkersAction) {
    RequestMarkersAction.KIND = 'requestMarkers';
    function is(object) {
        return base_protocol_1.RequestAction.hasKind(object, RequestMarkersAction.KIND) && (0, type_util_1.hasArrayProp)(object, 'elementsIDs');
    }
    RequestMarkersAction.is = is;
    function create(elementsIDs, options = {}) {
        return Object.assign({ kind: RequestMarkersAction.KIND, requestId: '', elementsIDs }, options);
    }
    RequestMarkersAction.create = create;
})(RequestMarkersAction = exports.RequestMarkersAction || (exports.RequestMarkersAction = {}));
var SetMarkersAction;
(function (SetMarkersAction) {
    SetMarkersAction.KIND = 'setMarkers';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, SetMarkersAction.KIND) && (0, type_util_1.hasArrayProp)(object, 'markers');
    }
    SetMarkersAction.is = is;
    function create(markers, options = {}) {
        return Object.assign({ kind: SetMarkersAction.KIND, responseId: '', markers }, options);
    }
    SetMarkersAction.create = create;
})(SetMarkersAction = exports.SetMarkersAction || (exports.SetMarkersAction = {}));
var DeleteMarkersAction;
(function (DeleteMarkersAction) {
    DeleteMarkersAction.KIND = 'deleteMarkers';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, DeleteMarkersAction.KIND) && (0, type_util_1.hasArrayProp)(object, 'markers');
    }
    DeleteMarkersAction.is = is;
    function create(markers) {
        return {
            kind: DeleteMarkersAction.KIND,
            markers
        };
    }
    DeleteMarkersAction.create = create;
})(DeleteMarkersAction = exports.DeleteMarkersAction || (exports.DeleteMarkersAction = {}));
//# sourceMappingURL=element-validation.js.map