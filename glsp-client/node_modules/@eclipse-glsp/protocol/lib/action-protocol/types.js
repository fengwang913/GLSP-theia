"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MenuItem = exports.PaletteItem = exports.LabeledAction = exports.EditorContext = void 0;
const type_util_1 = require("../utils/type-util");
const tool_palette_1 = require("./tool-palette");
var EditorContext;
(function (EditorContext) {
    function is(object) {
        return object !== undefined && (0, type_util_1.hasArrayProp)(object, 'selectedElementIds');
    }
    EditorContext.is = is;
})(EditorContext = exports.EditorContext || (exports.EditorContext = {}));
var LabeledAction;
(function (LabeledAction) {
    function is(object) {
        return type_util_1.AnyObject.is(object) && (0, type_util_1.hasStringProp)(object, 'label') && (0, type_util_1.hasArrayProp)(object, 'actions');
    }
    LabeledAction.is = is;
    function toActionArray(input) {
        if (Array.isArray(input)) {
            return input;
        }
        else if (LabeledAction.is(input)) {
            return input.actions;
        }
        return [input];
    }
    LabeledAction.toActionArray = toActionArray;
})(LabeledAction = exports.LabeledAction || (exports.LabeledAction = {}));
var PaletteItem;
(function (PaletteItem) {
    function is(object) {
        return LabeledAction.is(object) && (0, type_util_1.hasStringProp)(object, 'id') && (0, type_util_1.hasStringProp)(object, 'sortString');
    }
    PaletteItem.is = is;
    function getTriggerAction(item) {
        if (item) {
            const initialActions = item.actions
                .filter(a => isTriggerElementCreationAction(a))
                .map(action => action);
            return initialActions.length > 0 ? initialActions[0] : undefined;
        }
        return undefined;
    }
    PaletteItem.getTriggerAction = getTriggerAction;
    function isTriggerElementCreationAction(object) {
        return tool_palette_1.TriggerNodeCreationAction.is(object) || tool_palette_1.TriggerEdgeCreationAction.is(object);
    }
    PaletteItem.isTriggerElementCreationAction = isTriggerElementCreationAction;
})(PaletteItem = exports.PaletteItem || (exports.PaletteItem = {}));
var MenuItem;
(function (MenuItem) {
    function is(object) {
        return LabeledAction.is(object) && (0, type_util_1.hasStringProp)(object, 'id');
    }
    MenuItem.is = is;
})(MenuItem = exports.MenuItem || (exports.MenuItem = {}));
//# sourceMappingURL=types.js.map