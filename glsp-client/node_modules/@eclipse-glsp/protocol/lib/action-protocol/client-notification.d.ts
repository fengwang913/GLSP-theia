import { Action } from './base-protocol';
/**
 * Sent by the server to signal a state change.
 * If a timeout is given the respective status should disappear after the timeout is reached.
 * The corresponding namespace declares the action kind as constant and offers helper functions for type guard checks
 * and creating new `ServerStatusActions`.
 */
export interface ServerStatusAction extends Action {
    kind: typeof ServerStatusAction.KIND;
    /**
     * The severity of the status.
     */
    severity: ServerSeverity;
    /**
     * The user-facing message describing the status.
     */
    message: string;
    /**
     * Timeout after which a displayed status should disappear.
     */
    timeout?: number;
}
export declare namespace ServerStatusAction {
    const KIND = "serverStatus";
    function is(object: any): object is ServerStatusAction;
    function create(message: string, options?: {
        severity?: ServerSeverity;
        timeout?: number;
    }): ServerStatusAction;
}
/**
 * The possible server status severity levels.
 */
export declare type ServerSeverity = 'NONE' | 'INFO' | 'WARNING' | 'ERROR' | 'FATAL' | 'OK';
/**
 * Sent by the server to notify the user about something of interest. Typically this message is handled by
 * the client by showing a message to the user with the application's message service.
 * If a timeout is given the respective message should disappear after the timeout is reached.
 * The corresponding namespace declares the action kind as constant and offers helper functions for type guard checks
 * and creating new `ServerMessageActions`.
 */
export interface ServerMessageAction extends Action {
    kind: typeof ServerMessageAction.KIND;
    severity: ServerSeverity;
    /**
     * The message that shall be shown to the user.
     */
    message: string;
    /**
     * Further details on the message.
     */
    details?: string;
    /**
     * Timeout after which a displayed message disappears.
     */
    timeout?: number;
}
export declare namespace ServerMessageAction {
    const KIND = "serverMessage";
    function is(object: any): object is ServerMessageAction;
    function create(message: string, options?: {
        severity?: ServerSeverity;
        details?: string;
        timeout?: number;
    }): ServerMessageAction;
}
//# sourceMappingURL=client-notification.d.ts.map