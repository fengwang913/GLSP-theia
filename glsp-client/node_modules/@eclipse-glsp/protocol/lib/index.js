"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SetViewportAction = exports.SetBoundsAction = void 0;
/********************************************************************************
 * Copyright (c) 2020-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const actions_1 = require("sprotty-protocol/lib/actions");
Object.defineProperty(exports, "SetBoundsAction", { enumerable: true, get: function () { return actions_1.SetBoundsAction; } });
Object.defineProperty(exports, "SetViewportAction", { enumerable: true, get: function () { return actions_1.SetViewportAction; } });
const action_protocol_1 = require("./action-protocol");
const type_util_1 = require("./utils/type-util");
actions_1.SetViewportAction.is = (object) => action_protocol_1.Action.hasKind(object, actions_1.SetViewportAction.KIND) &&
    (0, type_util_1.hasStringProp)(object, 'elementId') &&
    (0, type_util_1.hasObjectProp)(object, 'newViewport') &&
    (0, type_util_1.hasBooleanProp)(object, 'animate');
actions_1.SetBoundsAction.is = (object) => action_protocol_1.Action.hasKind(object, actions_1.SetBoundsAction.KIND) && (0, type_util_1.hasObjectProp)(object, 'bounds');
__exportStar(require("sprotty-protocol/lib/utils/async"), exports);
__exportStar(require("sprotty-protocol/lib/utils/geometry"), exports);
__exportStar(require("sprotty-protocol/lib/utils/json"), exports);
__exportStar(require("sprotty-protocol/lib/utils/model-utils"), exports);
// Default export of @eclipse-glsp/protocol
__exportStar(require("./action-protocol"), exports);
__exportStar(require("./glsp-client"), exports);
__exportStar(require("./jsonrpc/base-jsonrpc-glsp-client"), exports);
__exportStar(require("./jsonrpc/glsp-jsonrpc-client"), exports);
__exportStar(require("./model/default-types"), exports);
__exportStar(require("./model/model-schema"), exports);
__exportStar(require("./utils/array-util"), exports);
__exportStar(require("./utils/type-util"), exports);
//# sourceMappingURL=index.js.map