"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TheiaJsonrpcGLSPClient = void 0;
/********************************************************************************
 * Copyright (c) 2020-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const client_1 = require("@eclipse-glsp/client");
class TheiaJsonrpcGLSPClient extends client_1.BaseJsonrpcGLSPClient {
    constructor(options) {
        super(options);
        this.messageService = options.messageService;
    }
    handleConnectionError(error, message, count) {
        super.handleConnectionError(error, message, count);
        this.messageService.error(`Connection the ${this.id} glsp server is erroring. Shutting down server.`);
    }
    handleConnectionClosed() {
        if (this.state !== client_1.ClientState.Stopping && this.state !== client_1.ClientState.Stopped) {
            this.messageService.error(`Connection to the ${this.id} glsp server got closed. Server will not be restarted.`);
        }
        super.handleConnectionClosed();
    }
    checkConnectionState() {
        if (this.state === client_1.ClientState.ServerError) {
            this.messageService.error(`Could not establish connection to ${this.id} glsp server. Maybe the server has been shutdown due to a previous error.`);
        }
        return super.checkConnectionState();
    }
}
exports.TheiaJsonrpcGLSPClient = TheiaJsonrpcGLSPClient;
// eslint-disable-next-line no-redeclare
(function (TheiaJsonrpcGLSPClient) {
    function isOptions(object) {
        return client_1.JsonrpcGLSPClient.isOptions(object) && 'messageService' in object;
    }
    TheiaJsonrpcGLSPClient.isOptions = isOptions;
})(TheiaJsonrpcGLSPClient = exports.TheiaJsonrpcGLSPClient || (exports.TheiaJsonrpcGLSPClient = {}));
//# sourceMappingURL=theia-jsonrpc-glsp-client.js.map