"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GLSPCommandHandler = void 0;
const sprotty_theia_1 = require("sprotty-theia");
const glsp_diagram_widget_1 = require("./glsp-diagram-widget");
class GLSPCommandHandler extends sprotty_theia_1.DiagramCommandHandler {
    constructor(shell, command) {
        super(shell, () => this.dispatch());
        this.command = command;
    }
    dispatch() {
        return (this.glspDiagramWidget &&
            this.glspDiagramWidget.actionDispatcher.dispatchAll(this.command.actions(this.glspDiagramWidget.editorContext)));
    }
    get glspDiagramWidget() {
        return this.diagramWidget instanceof glsp_diagram_widget_1.GLSPDiagramWidget ? this.diagramWidget : undefined;
    }
    isEnabled() {
        return (super.isEnabled() &&
            this.glspDiagramWidget !== undefined &&
            (this.command.isEnabled === undefined || this.command.isEnabled(this.glspDiagramWidget.editorContext)));
    }
    isVisible() {
        return (this.glspDiagramWidget !== undefined &&
            (this.command.isVisible === undefined || this.command.isVisible(this.glspDiagramWidget.editorContext)));
    }
    isToggled() {
        return (this.glspDiagramWidget !== undefined &&
            this.command.isToggled !== undefined &&
            this.command.isToggled(this.glspDiagramWidget.editorContext));
    }
}
exports.GLSPCommandHandler = GLSPCommandHandler;
//# sourceMappingURL=glsp-command-handler.js.map