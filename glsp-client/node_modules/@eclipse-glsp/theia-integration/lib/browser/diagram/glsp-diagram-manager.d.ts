import { ApplicationShell, NavigatableWidgetOptions, StorageService, WidgetOpenerOptions } from '@theia/core/lib/browser';
import { SelectionService } from '@theia/core/lib/common/selection-service';
import URI from '@theia/core/lib/common/uri';
import { interfaces } from '@theia/core/shared/inversify';
import { EditorPreferences } from '@theia/editor/lib/browser';
import { DiagramConfiguration, DiagramManager, DiagramWidget, DiagramWidgetOptions } from 'sprotty-theia';
import { TheiaOpenerOptionsNavigationService } from '../theia-opener-options-navigation-service';
import { GLSPDiagramContextKeyService } from './glsp-diagram-context-key-service';
import { TheiaGLSPConnector } from './theia-glsp-connector';
export declare function registerDiagramManager(bind: interfaces.Bind, diagramManagerServiceId: interfaces.ServiceIdentifier<DiagramManager>, bindToSelf?: boolean): void;
export declare const TheiaGLSPConnectorProvider: unique symbol;
export declare type TheiaGLSPConnectorProvider = (diagramType: string) => Promise<TheiaGLSPConnector>;
export declare abstract class GLSPDiagramManager extends DiagramManager {
    protected readonly editorPreferences: EditorPreferences;
    protected readonly storage: StorageService;
    protected readonly diagramNavigationService: TheiaOpenerOptionsNavigationService;
    protected readonly contextKeyService: GLSPDiagramContextKeyService;
    protected readonly shell: ApplicationShell;
    theiaSelectionService: SelectionService;
    protected readonly connectorProvider: TheiaGLSPConnectorProvider;
    abstract get fileExtensions(): string[];
    protected _diagramConnector: TheiaGLSPConnector;
    protected initialize(): Promise<void>;
    doOpen(widget: DiagramWidget, options?: WidgetOpenerOptions): Promise<void>;
    createWidget(options?: any): Promise<DiagramWidget>;
    protected createWidgetOptions(uri: URI, options?: GLSPWidgetOpenerOptions): DiagramWidgetOptions & GLSPWidgetOptions;
    protected createWidgetId(options: DiagramWidgetOptions): string;
    protected getDiagramConfiguration(options: DiagramWidgetOptions): DiagramConfiguration;
    canHandle(uri: URI, _options?: WidgetOpenerOptions | undefined): number;
    get diagramConnector(): TheiaGLSPConnector;
    get id(): string;
    get iconClass(): string;
}
export interface GLSPWidgetOpenerOptions extends WidgetOpenerOptions {
    editMode?: string;
}
export interface GLSPWidgetOptions extends NavigatableWidgetOptions {
    editMode: string;
}
export declare function deriveDiagramManagerId(diagramType: string): string;
//# sourceMappingURL=glsp-diagram-manager.d.ts.map