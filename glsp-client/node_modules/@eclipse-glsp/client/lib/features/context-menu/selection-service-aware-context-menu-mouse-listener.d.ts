/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
import { Action } from '@eclipse-glsp/protocol';
import { ContextMenuProviderRegistry, IContextMenuServiceProvider, MouseListener, SModelElement } from 'sprotty';
import { SelectionService } from '../select/selection-service';
export declare class SelectionServiceAwareContextMenuMouseListener extends MouseListener {
    protected readonly contextMenuService: IContextMenuServiceProvider;
    protected readonly menuProvider: ContextMenuProviderRegistry;
    protected selectionService: SelectionService;
    /**
     * Opens the context menu on right-click.
     */
    mouseDown(target: SModelElement, event: MouseEvent): (Action | Promise<Action>)[];
    /**
     * Opens the context menu.
     *
     *   - query the element on the click-target
     *   - select the element
     *   - query the context menu service and the context menu elements
     *   - show the context menu
     *   - send a focus state change to indicate that the diagram becomes inactive, once the context menu is shown
     *
     * When the context menu is closed, we focus the diagram element again.
     */
    protected openContextMenu(event: MouseEvent, target: SModelElement): Promise<Action>[];
    protected focusEventTarget(event: MouseEvent): void;
}
//# sourceMappingURL=selection-service-aware-context-menu-mouse-listener.d.ts.map