/********************************************************************************
 * Copyright (c) 2021-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
import { Bounds, Dimension, Point } from '@eclipse-glsp/protocol';
import { BoundsData, LayoutContainer, SChildElement, SParentElement, StatefulLayouter } from 'sprotty';
import { AbstractLayout } from 'sprotty/lib/features/bounds/abstract-layout';
import { AbstractLayoutOptions } from 'sprotty/lib/features/bounds/layout-options';
/**
 * Layouts children of a container with explit X/Y positions
 */
export declare class FreeFormLayouter extends AbstractLayout<AbstractLayoutOptions> {
    static KIND: string;
    layout(container: SParentElement & LayoutContainer, layouter: StatefulLayouter): void;
    protected getChildrenSize(container: SParentElement & LayoutContainer, containerOptions: AbstractLayoutOptions, layouter: StatefulLayouter): Dimension;
    protected layoutChild(child: SChildElement, boundsData: BoundsData, bounds: Bounds, childOptions: AbstractLayoutOptions, containerOptions: AbstractLayoutOptions, currentOffset: Point, maxWidth: number, maxHeight: number): Point;
    protected getFinalContainerBounds(container: SParentElement & LayoutContainer, lastOffset: Point, options: AbstractLayoutOptions, maxWidth: number, maxHeight: number): Bounds;
    protected getDefaultLayoutOptions(): AbstractLayoutOptions;
    protected spread(a: AbstractLayoutOptions, b: AbstractLayoutOptions): AbstractLayoutOptions;
}
//# sourceMappingURL=freeform-layout.d.ts.map